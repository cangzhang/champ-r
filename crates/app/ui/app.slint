import { Button, VerticalBox, CheckBox, Spinner, StandardButton, ComboBox, HorizontalBox, GridBox } from "std-widgets.slint";

struct UiSource {
    name: string,
    source: string,
    // version: string,
    checked: bool,
}

struct UiRune {
    name: string,
    position: string,
    rune_image1: image,
    rune_image2: image,
    rune_image3: image,
}

export component AppWindow inherits Window {
    width: 400px;
    height: 500px;
    title: "ChampR";

    in-out property <[UiSource]> source_list: [];
    in property <bool> lcu_running: false;
    callback apply_builds();

    if root.source_list.length == 0: VerticalBox {
        Spinner {
            max-height: 50px;
            max-width: 50px;
            indeterminate: true;
        }
    }

    if root.source_list.length > 0: VerticalBox {
        for source[i] in root.source_list: CheckBox {
            text: source.name;
            checked: source.checked;
            toggled => {
                source.checked = !source.checked;
            }
        }
        if root.lcu_running: VerticalBox {
            Button {
                height: 30px;
                width: 200px;
                text: "Apply Selected Sources";
                primary: true;
                clicked => {
                    root.apply_builds();
                }
            }
        }
        if !root.lcu_running: VerticalBox {
            Text {
                text: "League is not running, please start it first.";
            }
        }
    }
}

export component RuneWindow inherits Dialog {
    title: "Runes";
    // always-on-top: true;
    width: 400px;
    height: 500px;

    in-out property <string> lcu_auth: "";
    in-out property <int> champion_id: 0;
    in-out property <bool> on_top: false;
    in-out property <[string]> source_list: [];
    in-out property <string> selected_source: "";
    in-out property <int> selected_source_index: 0;
    in-out property <image> champion_icon: @image-url("../../../assets/logo.png");
    in-out property <[UiRune]> rune_list: [];

    callback refetch_data(string, int);

    changed champion_id => {
        debug("champion_id changed to: ", root.champion_id);
        root.champion_id = root.champion_id;
        root.refetch_data(root.source_list[root.selected_source_index], root.champion_id);
    }
    changed selected_source_index => {
        debug("selected_source_index: changed to", root.selected_source_index);
        root.refetch_data(root.source_list[root.selected_source_index], root.champion_id);
    }

    VerticalLayout {
        HorizontalBox {
            Image {
                height: 30px;
                width: 30px;
                source: root.champion_icon;
            }

            ComboBox {
                height: 30px;
                model: root.source_list;
                current-index: root.selected_source_index;
                changed current-index => {
                    root.selected_source_index = self.current-index;
                    root.selected_source = self.current-value;
                }
            }
        }

        for rune[i] in root.rune_list: VerticalBox {
            HorizontalBox {
                Text {
                    height: 30px;
                    text: rune.name;
                }
    
                Text {
                    height: 30px;
                    text: rune.position;
                }
            }
    
            HorizontalBox {
                Image {
                    height: 30px;
                    width: 30px;
                    source: rune.rune_image1;
                }
    
                Image {
                    height: 30px;
                    width: 30px;
                    source: rune.rune_image2;
                }
            }
        }
    }
}
